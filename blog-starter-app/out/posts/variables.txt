3:"$Sreact.fragment"
4:I[8126,["185","static/chunks/app/layout-5fe2071372afb89b.js"],"ThemeSwitcher"]
5:I[9275,[],""]
6:I[1343,[],""]
8:I[3120,[],"OutletBoundary"]
a:I[3120,[],"MetadataBoundary"]
c:I[3120,[],"ViewportBoundary"]
e:I[6130,[],""]
1:HL["/_next/static/css/69151a66b11fb5e6.css","style"]
2:HL["/_next/static/css/7b78b3324543415c.css","style"]
0:{"P":null,"b":"t7j2ZNrUgLIurcqLcaPbU","p":"","c":["","posts","variables"],"i":false,"f":[[["",{"children":["posts",{"children":[["slug","variables","d"],{"children":["__PAGE__?{\"slug\":\"variables\"}",{}]}]}]},"$undefined","$undefined",true],["",["$","$3","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/69151a66b11fb5e6.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","link",null,{"rel":"apple-touch-icon","sizes":"180x180","href":"/favicon/apple-touch-icon.png"}],["$","link",null,{"rel":"icon","type":"image/png","sizes":"32x32","href":"/favicon/favicon-32x32.png"}],["$","link",null,{"rel":"icon","type":"image/png","sizes":"16x16","href":"/favicon/favicon-16x16.png"}],["$","link",null,{"rel":"manifest","href":"/favicon/site.webmanifest"}],["$","link",null,{"rel":"mask-icon","href":"/favicon/safari-pinned-tab.svg","color":"#000000"}],["$","link",null,{"rel":"shortcut icon","href":"/favicon/favicon.svg"}],["$","meta",null,{"name":"msapplication-TileColor","content":"#000000"}],["$","meta",null,{"name":"msapplication-config","content":"/favicon/browserconfig.xml"}],["$","meta",null,{"name":"theme-color","content":"#000"}],["$","link",null,{"rel":"alternate","type":"application/rss+xml","href":"/feed.xml"}]]}],["$","body",null,{"className":"__className_e8ce0c dark:bg-slate-900 dark:text-slate-400","children":[["$","$L4",null,{}],["$","div",null,{"className":"min-h-screen","children":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]}],["$","footer",null,{"className":"bg-neutral-50 border-t border-neutral-200 dark:bg-slate-800","children":["$","div",null,{"className":"container mx-auto px-5","children":["$","div",null,{"className":"py-28 flex flex-col lg:flex-row items-center","children":[["$","h3",null,{"className":"text-4xl lg:text-[2.5rem] font-bold tracking-tighter leading-tight text-center lg:text-left mb-10 lg:mb-0 lg:pr-4 lg:w-1/2","children":"© 2024 Wayne的个人技术博客"}],["$","div",null,{"className":"flex flex-col lg:flex-row justify-center items-center lg:pl-4 lg:w-1/2","children":[["$","a",null,{"href":"mailto:2628751928@qq.com","className":"mx-3 bg-black hover:bg-white hover:text-black border border-black text-white font-bold py-3 px-12 lg:px-8 duration-200 transition-colors mb-6 lg:mb-0","children":"商务合作"}],["$","a",null,{"href":"https://blog.csdn.net/qq_46686675?spm=1000.2115.3001.5343","className":"mx-3 font-bold hover:underline","target":"_blank","rel":"noopener noreferrer","children":"我的CSDN博客"}]]}]]}]}]}]]}]]}]]}],{"children":["posts",["$","$3","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}],{"children":[["slug","variables","d"],["$","$3","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}],{"children":["__PAGE__",["$","$3","c",{"children":["$L7",[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/7b78b3324543415c.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L8",null,{"children":"$L9"}]]}],{},null]},null]},null]},null],["$","$3","h",{"children":[null,["$","$3","pT1aCqD8tEeM9WPkk7qEk",{"children":[["$","$La",null,{"children":"$Lb"}],["$","$Lc",null,{"children":"$Ld"}],null]}]]}]]],"m":"$undefined","G":["$e","$undefined"],"s":false,"S":true}
f:I[231,["30","static/chunks/30-5b16b16b6b426edb.js","333","static/chunks/app/posts/%5Bslug%5D/page-eaae9ecd993fb547.js"],""]
10:I[8173,["30","static/chunks/30-5b16b16b6b426edb.js","333","static/chunks/app/posts/%5Bslug%5D/page-eaae9ecd993fb547.js"],"Image"]
11:T1697,<h2>让我们从最基础的开始</h2>
<p>在 JavaScript 中，<code>let</code>、<code>var</code> 和 <code>const</code> 都是用于声明变量的关键字。它们之间的区别有很多，理解这些区别对于写出高效、可维护的代码非常重要。接下来，我将以简单的方式帮你分析这三种变量声明方式的特点，并解释它们在实际开发中的区别。</p>
<h3>1. <code>var</code> —— 传统的变量声明方式</h3>
<p><code>var</code> 是 JavaScript 中最早的变量声明方式。它有一个比较特别的特点，那就是 <strong>变量提升（Hoisting）</strong>。通过变量提升，<code>var</code> 声明的变量会被提升到函数或全局作用域的顶部，但变量的值不会被提升。</p>
<h4>举个例子：</h4>
<pre><code class="language-javascript">console.log(a); // undefined
var a = 10;
</code></pre>
<p><strong>解释</strong>：</p>
<ul>
<li>虽然我们在 <code>console.log(a)</code> 时使用了 <code>a</code>，但 <code>var</code> 声明的变量会被提升到顶部。因此，虽然变量 <code>a</code> 在上面声明，但它被提升时只提升了变量的声明，而没有赋值。</li>
<li>所以，输出是 <code>undefined</code>，而不是 <code>ReferenceError</code>。</li>
</ul>
<h3>2. <code>let</code> —— 更现代的声明方式</h3>
<p><code>let</code> 是 ES6（ECMAScript 2015）引入的变量声明方式。相比 <code>var</code>，<code>let</code> 的最大特点是 <strong>块级作用域</strong>，即它只在代码块（如函数、循环、条件语句等）中有效。另外，<code>let</code> 也有 <strong>暂时性死区（TDZ，Temporal Dead Zone）</strong> 的概念，即在声明之前使用 <code>let</code> 声明的变量，会抛出错误。</p>
<h4>举个例子：</h4>
<pre><code class="language-javascript">console.log(a); // ReferenceError: Cannot access 'a' before initialization
let a = 10;
</code></pre>
<p><strong>解释</strong>：</p>
<ul>
<li>在上面的代码中，<code>let</code> 声明的 <code>a</code> 存在一个 <strong>暂时性死区（TDZ）</strong>，即变量在声明之前是不可访问的。</li>
<li>因此，<code>console.log(a)</code> 会抛出 <code>ReferenceError</code> 错误，而不是输出 <code>undefined</code>。</li>
</ul>
<h3>3. <code>const</code> —— 常量声明</h3>
<p><code>const</code> 也是 ES6 引入的，和 <code>let</code> 一样，<code>const</code> 也是 <strong>块级作用域</strong>。但与 <code>let</code> 不同的是，<code>const</code> 用于声明常量，一旦被赋值后，不能再被重新赋值。</p>
<h4>举个例子：</h4>
<pre><code class="language-javascript">const a = 10;
a = 20; // TypeError: Assignment to constant variable.
</code></pre>
<p><strong>解释</strong>：</p>
<ul>
<li><code>const</code> 声明的常量 <code>a</code> 不允许再次赋值，若尝试赋新值，将抛出 <code>TypeError</code> 错误。</li>
<li>注意，<code>const</code> 只保证 <strong>基本数据类型（如数字、字符串等）</strong> 不可改变，对于 <strong>引用数据类型（如数组、对象等）</strong>，则可以修改其内容，但不能改变其引用。</li>
</ul>
<h3>4. 变量提升（Hoisting）</h3>
<p>我们之前提到了 <strong>变量提升</strong>，这也是 <code>var</code>、<code>let</code> 和 <code>const</code> 之间的一个重要区别。</p>
<ul>
<li><strong><code>var</code></strong> 会提升声明（但赋值不提升），即使变量没有初始化，<code>var</code> 也不会报错，而是会输出 <code>undefined</code>。</li>
<li><strong><code>let</code> 和 <code>const</code></strong> 的声明同样会被提升，但是它们在声明之前是不能访问的，会抛出 <code>ReferenceError</code>。</li>
</ul>
<h3>5. 使用场景的建议</h3>
<h4>使用 <code>var</code>：</h4>
<p>虽然 <code>var</code> 在 JavaScript 中是最早的声明方式，但由于其 <strong>函数作用域</strong> 和 <strong>变量提升</strong> 的特性，现代 JavaScript 开发中已经不推荐使用 <code>var</code>。它容易导致作用域混乱，特别是在较大的项目中。</p>
<h4>使用 <code>let</code>：</h4>
<p><code>let</code> 是比较安全和常用的声明方式，适用于大多数场景。它的 <strong>块级作用域</strong> 和 <strong>暂时性死区</strong> 可以避免 <code>var</code> 带来的作用域问题。</p>
<h4>使用 <code>const</code>：</h4>
<p>如果你确定一个变量不会被重新赋值，应该使用 <code>const</code>。它不仅可以增强代码的可读性，还能有效地避免变量被修改。</p>
<h3>总结</h3>
<ol>
<li>
<p><strong><code>var</code></strong>：</p>
<ul>
<li>函数作用域</li>
<li>会有变量提升，且赋值不会提升</li>
<li>推荐尽量避免使用</li>
</ul>
</li>
<li>
<p><strong><code>let</code></strong>：</p>
<ul>
<li>块级作用域</li>
<li>不会有变量提升（会有暂时性死区）</li>
<li>适用于大多数变量声明场景</li>
</ul>
</li>
<li>
<p><strong><code>const</code></strong>：</p>
<ul>
<li>块级作用域</li>
<li>用于声明常量，值不能重新赋值</li>
<li>适用于不会改变值的变量（如常量）</li>
</ul>
</li>
</ol>
<h3>最后的小提示：</h3>
<ul>
<li>尽量避免使用 <code>var</code>，推荐使用 <code>let</code> 和 <code>const</code> 来声明变量。</li>
<li>使用 <code>const</code> 声明常量，增加代码的可读性和可靠性。</li>
<li>理解 <strong>变量提升</strong> 和 <strong>暂时性死区</strong>，它们会影响你调试和编写代码的方式。</li>
</ul>
<p>希望这篇文章帮助你更好地理解 <code>let</code>、<code>var</code> 和 <code>const</code> 的区别！</p>
7:["$","main",null,{"children":[["$","div",null,{"className":"border-b dark:bg-slate-800 bg-neutral-50 border-neutral-200","children":["$","div",null,{"className":"container mx-auto px-5","children":["$","div",null,{"className":"py-2 text-center text-sm","children":"$undefined"}]}]}],["$","div",null,{"className":"container mx-auto px-5","children":[["$","h2",null,{"className":"text-2xl md:text-4xl font-bold tracking-tight md:tracking-tighter leading-tight mb-20 mt-8 flex items-center","children":[["$","$Lf",null,{"href":"/","className":"hover:underline","children":"Blog"}],"."]}],["$","article",null,{"className":"mb-32","children":[[["$","h1",null,{"className":"text-5xl md:text-7xl lg:text-8xl font-bold tracking-tighter leading-tight md:leading-none mb-12 text-center md:text-left","children":"JavaScript中的let、var、const变量解析"}],["$","div",null,{"className":"hidden md:block md:mb-12","children":["$","div",null,{"className":"flex items-center","children":[["$","img",null,{"src":"/assets/blog/authors/headPic.jpg","className":"w-12 h-12 rounded-full mr-4","alt":"Wayne"}],["$","div",null,{"className":"text-xl font-bold","children":"Wayne"}]]}]}],["$","div",null,{"className":"mb-8 md:mb-16 sm:mx-0","children":["$","div",null,{"className":"sm:mx-0","children":["$","$L10",null,{"src":"/assets/blog/images/variables.jpg","alt":"Cover Image for JavaScript中的let、var、const变量解析","className":"shadow-sm w-full","width":1300,"height":630}]}]}],["$","div",null,{"className":"max-w-2xl mx-auto","children":[["$","div",null,{"className":"block md:hidden mb-6","children":["$","div",null,{"className":"flex items-center","children":[["$","img",null,{"src":"/assets/blog/authors/headPic.jpg","className":"w-12 h-12 rounded-full mr-4","alt":"Wayne"}],["$","div",null,{"className":"text-xl font-bold","children":"Wayne"}]]}]}],["$","div",null,{"className":"mb-6 text-lg","children":["$","time",null,{"dateTime":"2024-01-16T10:00:00.000Z","children":"January\t16, 2024"}]}]]}]],["$","div",null,{"className":"max-w-2xl mx-auto","children":["$","div",null,{"className":"markdown-styles_markdown__ORfR8","dangerouslySetInnerHTML":{"__html":"$11"}}]}]]}]]}]]}]
d:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
b:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"JavaScript中的let、var、const变量解析 | Next.js Blog Example with Markdown"}],["$","meta","2",{"name":"description","content":"分享技术见解、开发经验和学习心得的个人技术博客"}],["$","meta","3",{"property":"og:title","content":"JavaScript中的let、var、const变量解析 | Next.js Blog Example with Markdown"}],["$","meta","4",{"property":"og:description","content":"分享技术见解、开发经验和学习心得的个人技术博客"}],["$","meta","5",{"property":"og:image","content":"http://localhost:3000/assets/blog/images/variables.jpg"}],["$","meta","6",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","7",{"name":"twitter:title","content":"JavaScript中的let、var、const变量解析 | Next.js Blog Example with Markdown"}],["$","meta","8",{"name":"twitter:description","content":"分享技术见解、开发经验和学习心得的个人技术博客"}],["$","meta","9",{"name":"twitter:image","content":"http://localhost:3000/assets/blog/images/variables.jpg"}]]
9:null
